// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "mrexmelle@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/credentials": {
            "post": {
                "description": "Post a new credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "parameters": [
                    {
                        "description": "Credential Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/credential.PostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/credential.ResponseDto"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/credentials/{eid}": {
            "delete": {
                "description": "Delete a credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "eid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/credential.ResponseDto"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/credentials/{eid}/password": {
            "delete": {
                "description": "Reset a credential's password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "eid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/credential.ResponseDto"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "patch": {
                "description": "Patch a credential's password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "eid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patch Password Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/credential.PatchPasswordRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/credential.ResponseDto"
                        }
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        }
    },
    "definitions": {
        "credential.PatchPasswordRequestDto": {
            "type": "object",
            "properties": {
                "currentPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "credential.PostRequestDto": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "credential.ResponseDto": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Connect Auth API",
	Description:      "Auth API for Connect.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
